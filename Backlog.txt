#### In current Sprint #########################################################

--------------------------------------------------------------------------------
Bootstrap a libGDX project in our src github repo
> this could (should?) be finished by the end of the meeting
est 1 hour
:Brett Menzies

--------------------------------------------------------------------------------
write class diagrams makefile
> automatically adding chapters and diagrams from subdirectories would be nice
> Something so someone can update a class diagram and just run "make" to update
    all the png's that need updated
est 2 hr
:Brett Menzies

--------------------------------------------------------------------------------
Get a quick and dirty sprite set made for map and character
> Describe the tile-based view's characteristics
> at least 4 tiles and a basic character
> 32x32 pixels
est 2hr
:Elizabeth Hernandez

--------------------------------------------------------------------------------
Initial map implementation
:Micheal Mueller

--------------------------------------------------------------------------------
Initial sprite resounce manager
:Gabriel

--------------------------------------------------------------------------------
Document how abstract commands will be passed from input to game engine
> eventually comms system will embody the "to" in the previous sentence
> movement, leveling, changing equipment, interacting with the map, conversation
    all need to be supported evetually
:Brett Menzies
                                                                                <Completed above
--------------------------------------------------------------------------------
Write accompanying Minimally-Implemented Stub Classes for class diagrams
> or (probably often) Interfaces instead of  ^MISC^
est 2 hr
:Jordan Lynn

--------------------------------------------------------------------------------
Implement the program's major structures
> register input handler
> render thread
> Game engine loop thread
    this is what will eventually be in the server, and replaced in the client
    by comms at that time
> "sectioned off" gamestate that the server will control in the future
:(game loop thread) Alexia

--------------------------------------------------------------------------------
Initial player class
> should extend drawable and draw itself onscreen at the right location

--------------------------------------------------------------------------------
write game engine loop to accept commands 
> threadsafe command queue
> cycle through commands and move the player

--------------------------------------------------------------------------------
Initial implementation of input system
> just keyboard is fine
> the structure should already exist from the class diagram conversion

--------------------------------------------------------------------------------
First game window
> Launched by main menu
> simple map loaded in the background
> character on the map
> movable map view

#### Backlog ###################################################################<Next release marker

--------------------------------------------------------------------------------
Design and Implement the on-screen HUD
> will need someone to make the images
> the data can be bogus until more detailed characters are realized

--------------------------------------------------------------------------------
Implement player stats and leveling logic that is more complete
> generate character leveling tree

--------------------------------------------------------------------------------
Implement a more complete renderer
> items on map
> central sprite bank managing high-memory usage resources

--------------------------------------------------------------------------------
Complete Main Menu
> Write to satisfy main menu use cases
> make it actually launch the game
                                                                                <Must Have above

--------------------------------------------------------------------------------
Implement a more powerful map file reader
> larger variety of accepted tiles and their properties
> metadata section along with the tile section
> items and NPC locations etc.

--------------------------------------------------------------------------------
Describe and implement a few different types of items to be found
> maybe their stats are procedurally generated?
> maybe their stats come from text files?

--------------------------------------------------------------------------------
NPC system
> can just be dummies on the map
> should at least by aligned with a faction in spirit

--------------------------------------------------------------------------------
More detailed Descriptions of the different factions
> Include their mutual opinions
                                                                                <Like to Have above

--------------------------------------------------------------------------------
design and implement basic quest system

--------------------------------------------------------------------------------
implement conversations
> should get quests from dummy NPC's

--------------------------------------------------------------------------------
describe and test the client/server relationship for updating real time data
> class diagrams (and time diagrams) never got made
> Document the game state to by synced between clients in excruciating detail

--------------------------------------------------------------------------------
NPC AI system
> random walks, returning fire, etc.

--------------------------------------------------------------------------------
Splice local "comms" system into the game
> will pass all data between the game engine loop and game state/input through
    this
> Then when the game engine loop is moved to the server nothing changes
    in the client code

--------------------------------------------------------------------------------
Make connection with server on startup

--------------------------------------------------------------------------------
move game engine loop to the server program

--------------------------------------------------------------------------------
More interesting and intelligent NPC AI
                                                                                <Wont Have above

